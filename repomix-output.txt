This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-02T07:43:01.649Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Directory Structure
================================================================
blog/
  database.py
  main.py
  models.py
  schema.py

================================================================
Files
================================================================

================
File: blog/database.py
================
#Import statements
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

#URL CONNECTIVITY
SQLALCHEMY_DATABASE_URL = "sqlite:///./blog.db"

#START ENGINE
engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={'check_same_thread': False})

#CREATE SESSION
SessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)

#DECLARE MAPPING
Base = declarative_base()

================
File: blog/main.py
================
from fastapi import FastAPI, Depends, HTTPException
from blog import schema, models
from blog.database import engine, SessionLocal
from sqlalchemy.orm import Session  

app = FastAPI()

models.Base.metadata.create_all(engine)

def get_db():
    db = SessionLocal()
    try:
        yield db 
    finally:
        db.close()

@app.post('/blog')
def create(blog: schema.Blog, db: Session = Depends(get_db)):
    new_blog = models.Blog(title = blog.title, body=blog.body)
    db.add(new_blog)
    db.commit()
    db.refresh(new_blog)
    return new_blog

================
File: blog/models.py
================
from .database import Base
from sqlalchemy import Column, Integer, String

class Blog(Base):
    __tablename__ = 'blog'
    id = Column(Integer, primary_key=True, index=True)
    title = Column(String)
    body = Column(String)

================
File: blog/schema.py
================
from pydantic import BaseModel

class Blog(BaseModel):
    title: str
    body: str
